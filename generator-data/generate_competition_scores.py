#! python3import osimport shutil
this_dir = os.path.dirname(__file__)
root_dir = os.path.dirname(this_dir)func_dir = os.path.join(root_dir, 'datapack', 'data',  'cch', 'functions')def main():	data = readCSVFile(os.path.join(this_dir, 'competition_point_values.csv'))	#print(data)	count = data['_length']	#	distance_from_center = 505	#east, west, south, north	banner_east_item = 'minecraft:yellow_banner{BlockEntityTag:{Patterns:[{Pattern:"flo",Color:1}, {Pattern:"mc",Color:0}]}}' 	banner_west_item = 'minecraft:blue_banner{BlockEntityTag:{Patterns:[{Pattern:"gra",Color:15}, {Pattern:"mr",Color:0}]}}'	banner_south_item = 'minecraft:red_banner{BlockEntityTag:{Patterns:[{Pattern:"cre",Color:15}]}}'	banner_north_item = 'minecraft:light_gray_banner{BlockEntityTag:{Patterns:[{Pattern:"gra",Color:0}, {Pattern:"flo",Color:3}]}}'	#	update_header = 'scoreboard players set @a score 0\n'	init_header = ''	book_page_line_limit = 13	book_page_lines = ['Point Values',' ','task: point value','------------------']
	with open(os.path.join(func_dir,'z__competition_score_update.mcfunction'),'w') as update_out, open(os.path.join(func_dir,'z__competition_scoreboard_init.mcfunction'),'w') as init_out, open(os.path.join(func_dir,'z__competition_go_north.mcfunction'),'w') as start_north_out, open(os.path.join(func_dir,'z__competition_go_west.mcfunction'),'w') as start_west_out, open(os.path.join(func_dir,'z__competition_go_south.mcfunction'),'w') as start_south_out, open(os.path.join(func_dir,'z__competition_go_east.mcfunction'),'w') as start_east_out, open(os.path.join(func_dir,'z__competition_spawn_update.mcfunction'),'w') as spawn_update_out:		all_goers = (start_west_out, start_north_out, start_south_out, start_east_out)		update_out.write(update_header)		init_out.write(init_header)		for n in range(0, count):			entry = {}
			entry['type']=data['Type'][n]
			entry['var'] =data['Variable'][n]
			entry['name']=data['Name'][n]
			entry['pts'] =data['Points'][n]
			entry['cat'] =data['Category'][n]			points = entry['pts']
			#print('{var}({type}) = {pts}\t{name} ({cat})'.format(**entry))
			init_command = 'scoreboard objectives add {var} {type} "{name}"\n'.format(**entry)			if(int(points) != 0 and entry['cat'] != 'stats'):				init_command += 'scoreboard players set @a {var} 0\n'.format(**entry)			update_command = str('scoreboard players set @s temp 0\n'+
					'scoreboard players set @s ptval {pts}\n'+
					'scoreboard players operation @s temp += @s {var}\n'+
					'scoreboard players operation @s temp *= @s ptval\n'+
					'scoreboard players operation @s score += @s temp\n\n').format(**entry)			page_line = '{name}: {pts}'.format(**entry)			"""Chest with book tag:Items:[{Slot:0b, id:"minecraft:written_book", Count:1b, tag: {pages:["{\"text\":"\"page1 line1\\npage1 line2\"}","{\"text\":\"page2 line1\"}"], author:"Author Name", title:"The Title"}}]			"""			if(int(points) != 0):				book_page_lines.append(page_line)				update_out.write(update_command)			init_out.write(init_command)		ln = 0		book_tag = '{pages:['		first = True		for pg_ln in book_page_lines:			if(ln == 0):				if(first == False):					book_tag += '\\"}",'				book_tag += '"{\\"text\\":\\"'			book_tag += pg_ln			ln = (ln + 1) % book_page_line_limit			book_tag += '\\\\n'			first = False		book_tag += '\\"}"],'		book_tag += 'author:"The Scorekeeper", title:"Points Guide"}'		start_north_out.write('spreadplayers 0 -{radius} 1 128 true @s\n'.format(radius=distance_from_center))		start_south_out.write('spreadplayers 0 {radius} 1 128 true @s\n'.format(radius=distance_from_center))		start_west_out.write('spreadplayers -{radius} 0 1 128 true @s\n'.format(radius=distance_from_center))		start_east_out.write('spreadplayers {radius} 0 1 128 true @s\n'.format(radius=distance_from_center))		for fout in all_goers:			fout.write('give @a minecraft:compass\n')			fout.write('give @s minecraft:written_book{tag} 1\n'.format(tag=book_tag))			fout.write('give @s minecraft:cookie 3\n')			fout.write('give @s minecraft:iron_axe{Damage:240} 1\n')		start_north_out.write('give @s {item} 2\n'.format(item=banner_north_item))		start_south_out.write('give @s {item} 2\n'.format(item=banner_south_item))		start_west_out.write('give @s {item} 2\n'.format(item=banner_west_item))		start_east_out.write('give @s {item} 2\n'.format(item=banner_east_item))		color_tmp = '10329495'		start_north_out.write('give @s minecraft:leather_helmet{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_north_out.write('give @s minecraft:leather_chestplate{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_north_out.write('give @s minecraft:leather_leggings{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_north_out.write('give @s minecraft:leather_boots{display:{color:%s}, Damage:50} 1\n' % color_tmp)		color_tmp = '1908001'		start_south_out.write('give @s minecraft:leather_helmet{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_south_out.write('give @s minecraft:leather_chestplate{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_south_out.write('give @s minecraft:leather_leggings{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_south_out.write('give @s minecraft:leather_boots{display:{color:%s}, Damage:50} 1\n' % color_tmp)		color_tmp = '16701501'		start_east_out.write('give @s minecraft:leather_helmet{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_east_out.write('give @s minecraft:leather_chestplate{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_east_out.write('give @s minecraft:leather_leggings{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_east_out.write('give @s minecraft:leather_boots{display:{color:%s}, Damage:50} 1\n' % color_tmp)		color_tmp = '3949738'		start_west_out.write('give @s minecraft:leather_helmet{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_west_out.write('give @s minecraft:leather_chestplate{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_west_out.write('give @s minecraft:leather_leggings{display:{color:%s}, Damage:50} 1\n' % color_tmp)		start_west_out.write('give @s minecraft:leather_boots{display:{color:%s}, Damage:50} 1\n' % color_tmp)				team_names = ('north','south','east','west')		for team_id in team_names:			spawn_update_out.write('execute as @a[x=-9,y=199,z=-9,dx=32,dy=32,dz=32,team={team}] run function cch:z__competition_go_{team}\n'.format(team=team_id))		spawn_update_out.write('spawnpoint @a 7 201 7')def readCSVFile(filepath):	file_in = open(filepath, 'r')
	lines = file_in.readlines()
	file_in.close()	header_row = None	data_dict = {}	count = 0
	for ln in lines:		if(len(str(ln).strip()) == 0):			continue		row = parseRow(ln.strip())		if(header_row == None):			header_row = row			for h in header_row:				data_dict[h] = []			continue		for col in range(0, len(row)):			data_dict[header_row[col]].append(row[col])		count += 1	data_dict['_length']=count	return data_dictdef parseRow(row):	splitted = list(row.split(','))	for i in range(0, len(splitted)):		if(i >= len(splitted)):			break		cell = splitted[i]		if(cell[0] == '"'):			joined = cell[1:]			for n in range(i+1, len(splitted)):				next_cell = splitted[n]				joined = joined + ',' + next_cell				del_index = n				if(joined[-1] == '"'):					joined = joined[:-1]					for del_index in list(reversed(range(i+1, n+1))):						del splitted[del_index]					splitted[i] = joined					break	return splitted					main()